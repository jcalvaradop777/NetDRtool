/*
 * frmAsistente.java
 *
 * Created on 10 de abril de 2006, 06:49 AM
 */

package gui;

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author  and
 */
public class frmAsistente extends javax.swing.JFrame {
    private boolean CONEXION_EXITOSA = false;
    private Connection conexion = null;    
    private DefaultListModel atributos = null;
    private ArrayList tablas = new ArrayList();
    static private Visor preview;
    private int x = 150, y = 25;
        

    
    /** Creates new form frmAsistente */
    public frmAsistente() {
        initComponents();
        atributos = new DefaultListModel();
        lstAtributos.setModel(atributos);
        spnPuerto.setValue(5432);
        lblStatusBar.setIcon(new ImageIcon("/images/no_conectado"));
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        lblDriver = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        lblBD = new javax.swing.JLabel();
        lblHost = new javax.swing.JLabel();
        lblPuerto = new javax.swing.JLabel();
        cbxDriver = new javax.swing.JComboBox();
        txtUsuario = new javax.swing.JTextField();
        txtBD = new javax.swing.JTextField();
        txtHost = new javax.swing.JTextField();
        spnPuerto = new javax.swing.JSpinner();
        btnConectar = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        jPanel2 = new javax.swing.JPanel();
        lblTablas = new javax.swing.JLabel();
        cbxTablas = new javax.swing.JComboBox();
        btnPreview = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstCampos = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstAtributos = new javax.swing.JList();
        btnAdicionar = new javax.swing.JButton();
        btnQuitar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblStatusBar = new javax.swing.JLabel();
        btnQuery = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Conexion", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), javax.swing.UIManager.getDefaults().getColor("Button.darkShadow")));
        lblDriver.setText("Jdbc Driver:");

        lblUsuario.setText("Usuario:");

        lblPassword.setText("Password:");

        lblBD.setText("Base de Datos:");

        lblHost.setText("Host:");

        lblPuerto.setText("Puerto:");

        cbxDriver.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "org.postgresql.Driver" }));

        txtUsuario.setText("postgres");

        txtBD.setText("mine");

        txtHost.setText("localhost");

        btnConectar.setText("Conectar...");
        btnConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectarActionPerformed(evt);
            }
        });

        txtPassword.setText("postgres1");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(32, 32, 32)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, lblDriver)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, lblUsuario)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, lblHost))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(cbxDriver, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, txtHost, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .add(txtUsuario, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, lblPuerto)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, lblPassword))
                .add(12, 12, 12)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(spnPuerto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 56, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnConectar))
                    .add(txtPassword))
                .addContainerGap())
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(lblBD)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(txtBD, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                .add(259, 259, 259))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblDriver)
                    .add(cbxDriver, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblUsuario)
                    .add(lblPassword)
                    .add(txtUsuario, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtPassword, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblBD)
                    .add(txtBD, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblHost)
                    .add(lblPuerto)
                    .add(txtHost, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnConectar)
                    .add(spnPuerto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Seleccion de Atributos...", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), javax.swing.UIManager.getDefaults().getColor("Button.darkShadow")));
        lblTablas.setText("Tabla:");
        lblTablas.setEnabled(false);

        cbxTablas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecciona una Tabla..." }));
        cbxTablas.setEnabled(false);
        cbxTablas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxTablasItemStateChanged(evt);
            }
        });

        btnPreview.setText("Preview");
        btnPreview.setEnabled(false);
        btnPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviewActionPerformed(evt);
            }
        });

        lstCampos.setEnabled(false);
        jScrollPane1.setViewportView(lstCampos);

        lstAtributos.setEnabled(false);
        jScrollPane2.setViewportView(lstAtributos);

        btnAdicionar.setText("Adicionar");
        btnAdicionar.setEnabled(false);
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnQuitar.setText("Quitar");
        btnQuitar.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 10));
        jLabel2.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.darkShadow"));
        jLabel2.setText("Atributos Tabla:");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 10));
        jLabel3.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.darkShadow"));
        jLabel3.setText("Atributos Seleccionados:");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .add(61, 61, 61)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(btnQuitar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                                    .add(btnAdicionar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .add(jLabel2))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel3)
                            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(lblTablas)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cbxTablas, 0, 285, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnPreview)))
                .add(52, 52, 52))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblTablas)
                    .add(btnPreview)
                    .add(cbxTablas, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(42, 42, 42)
                        .add(btnAdicionar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnQuitar))
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                .addContainerGap())
        );

        lblStatusBar.setFont(new java.awt.Font("Arial", 0, 10));
        lblStatusBar.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.focus"));
        lblStatusBar.setText("Estableciendo Conexion...");
        lblStatusBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnQuery.setText("Query...");
        btnQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQueryActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(lblStatusBar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, btnQuery))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnQuery)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 32, Short.MAX_VALUE)
                .add(lblStatusBar)
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviewActionPerformed
// TODO add your handling code here:
        preview = new Visor();
        preview.setConnection(conexion);
        preview.setQuery("SELECT * FROM " + cbxTablas.getSelectedItem().toString());
        preview.setVisible(true);
    }//GEN-LAST:event_btnPreviewActionPerformed

    private void btnQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQueryActionPerformed
// TODO add your handling code here:
        int n = atributos.size();
        int m = tablas.size();
        StringBuffer query = new StringBuffer("SELECT ");
        
        for(int i = 0; i < n; i++){
            query.append(atributos.elementAt(i));
            if(i < n - 1){
                query.append(", ");
            }else{
                query.append(" ");
            }
        }
        query.append("FROM ");
        for(int i = 0; i < m; i++){
            query.append(tablas.get(i));
            if(i < m - 1){
                query.append(", ");
            }else{
                query.append(" ");
            }            
        }
        System.out.println(query.toString());
        new Visor(conexion, query.toString()).setVisible(true);
    }//GEN-LAST:event_btnQueryActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
// TODO add your handling code here:
        String tabla = cbxTablas.getSelectedItem().toString();
        Object[] seleccionados = lstCampos.getSelectedValues();
        if(!tablas.contains(tabla)){
            tablas.add(tabla);
        }
        for(int i = 0; i < seleccionados.length; i++){
            atributos.addElement(seleccionados[i]);
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void cbxTablasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxTablasItemStateChanged
// TODO add your handling code here:
        lstCampos.setModel(this.getCampos(cbxTablas.getSelectedItem().toString()));
        this.getRestricciones(cbxTablas.getSelectedItem().toString());
    }//GEN-LAST:event_cbxTablasItemStateChanged

    private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarActionPerformed
// TODO add your handling code here:
        String url = new String();
        try{
            Class.forName(cbxDriver.getSelectedItem().toString());
            url = "jdbc:postgresql://" + txtHost.getText() + ":" 
                    + spnPuerto.getValue().toString() + "/"
                    + txtBD.getText();
            conexion = DriverManager.getConnection(url, txtUsuario.getText(), 
                            txtPassword.getPassword().toString());
            CONEXION_EXITOSA = true;
            // Conexion exitosa...
            lblTablas.setEnabled(true);
            cbxTablas.setEnabled(true);
            btnPreview.setEnabled(true);
            lstAtributos.setEnabled(true);
            atributos.clear();
            tablas.clear();
            lstCampos.setEnabled(true);
            btnAdicionar.setEnabled(true);
            btnQuitar.setEnabled(true);
            lblStatusBar.setIcon(new ImageIcon("/images/conectado"));
            lblStatusBar.setText("Conexion Exitosa!!!");
            cbxTablas.setModel(new DefaultComboBoxModel(this.getTablas()));
            lstCampos.setModel(this.getCampos(cbxTablas.getSelectedItem().toString()));
        } catch(SQLException e1){
            System.out.println("2. " + e1);
        } catch(ClassNotFoundException e){
            System.out.println("1. " + e);
        }        
    }//GEN-LAST:event_btnConectarActionPerformed
    
    public Vector getTablas(){
        ResultSet rs;
        Vector nombres = new Vector();
        try{
            DatabaseMetaData dbmd = conexion.getMetaData();
            rs = dbmd.getTables("%", "%", "%", null);
            while(rs.next()){
                nombres.addElement(rs.getString(3));
            }
            rs.close();
        }catch(SQLException e){
            e.printStackTrace();
        }finally{
            return nombres;
        }
    }     
    
    public Vector getRestricciones(String tabla){
        ResultSet rs;
        Vector nombres = new Vector();
        try{
            DatabaseMetaData dbmd = conexion.getMetaData();
            rs = dbmd.getImportedKeys("", "", tabla);
            while(rs.next()){
                System.out.println(tabla + " Primary Key");
//                System.out.println("1" + rs.getString(1));
//                System.out.println("2" + rs.getString(2));
                System.out.println("3" + rs.getString(3));
                System.out.println("4" + rs.getString(4));
//                System.out.println("5" + rs.getString(5));
//                System.out.println("6" + rs.getString(6));
                System.out.println("7" + rs.getString(7));
                System.out.println("8" + rs.getString(8));
//                System.out.println("12" + rs.getString(12));
//                System.out.println("13" + rs.getString(13));
                System.out.println();
                //nombres.addElement(rs.getString(3));
            }
            rs = dbmd.getExportedKeys("", "", tabla);
            while(rs.next()){
                System.out.println(tabla + " Foreing Key");
//                System.out.println("1" + rs.getString(1));
//                System.out.println("2" + rs.getString(2));
                System.out.println("3" + rs.getString(3));
                System.out.println("4" + rs.getString(4));
//                System.out.println("5" + rs.getString(5));
//                System.out.println("6" + rs.getString(6));
                System.out.println("7" + rs.getString(7));
                System.out.println("8" + rs.getString(8));
//                System.out.println("12" + rs.getString(12));
//                System.out.println("13" + rs.getString(13));
                System.out.println();
                //nombres.addElement(rs.getString(3));
            }            
            rs.close();
        }catch(SQLException e){
            e.printStackTrace();
        }finally{
            return nombres;
        }
    }      
    
    public DefaultListModel getCampos(String tabla){
        ResultSet rs;
        DefaultListModel nombres = new DefaultListModel();
        try{
            DatabaseMetaData dbmd = conexion.getMetaData();
            rs = dbmd.getColumns("%", "%", tabla, null);
            while(rs.next()){
                nombres.addElement(rs.getString(4));
            }
            rs.close();
        }catch(SQLException e){
            e.printStackTrace();
        }finally{
            return nombres;
        }
    }      
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmAsistente().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnConectar;
    private javax.swing.JButton btnPreview;
    private javax.swing.JButton btnQuery;
    private javax.swing.JButton btnQuitar;
    private javax.swing.JComboBox cbxDriver;
    private javax.swing.JComboBox cbxTablas;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBD;
    private javax.swing.JLabel lblDriver;
    private javax.swing.JLabel lblHost;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPuerto;
    private javax.swing.JLabel lblStatusBar;
    private javax.swing.JLabel lblTablas;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JList lstAtributos;
    private javax.swing.JList lstCampos;
    private javax.swing.JSpinner spnPuerto;
    private javax.swing.JTextField txtBD;
    private javax.swing.JTextField txtHost;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
    
}
