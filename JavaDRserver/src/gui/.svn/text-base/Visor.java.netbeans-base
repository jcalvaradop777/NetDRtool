/*
 * Visor.java
 *
 * Created on 14 de febrero de 2006, 10:43 PM
 */

package gui;

import algorithm.association.FPGrowth.FPGrowth;
import algorithm.association.FPGrowth.Stack;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import gui.Icons.DBConnection.ScrollableTableModel;
import Utils.*;

/**
 *
 * @author  and
 */
public class Visor extends javax.swing.JFrame {
    private Connection conexion = null;
    public ScrollableTableModel table = null;
    private String query = null;
    DataSet dataset = new DataSet("");
    /** Creates new form Visor */
    public Visor() {
        initComponents();
    }
    
    public Visor(Connection conexion) {
        this.conexion = conexion;
        initComponents();
    }
    
    public Visor(Connection conexion, String query) {
        this.conexion = conexion;
        this.query = query;
        initComponents();
        txtquery.setText(this.query);
        tbl_resulset.setColumnSelectionAllowed(true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        txtquery = new javax.swing.JTextArea();
        btnejecutar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_resulset = new javax.swing.JTable();
        btnguardar = new javax.swing.JButton();
        btnMinar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Conjunto de Datos...");
        txtquery.setColumns(20);
        txtquery.setRows(5);
        txtquery.setText("select * from bd2_5kt20");
        jScrollPane1.setViewportView(txtquery);

        btnejecutar.setText("Ejecutar...");
        btnejecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnejecutarActionPerformed(evt);
            }
        });

        tbl_resulset.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_resulset.setCellSelectionEnabled(true);
        jScrollPane2.setViewportView(tbl_resulset);

        btnguardar.setText("Guardar");
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });

        btnMinar.setText("A Minar...");
        btnMinar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinarActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 501, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnejecutar))
                    .add(layout.createSequentialGroup()
                        .add(btnMinar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnguardar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(btnejecutar)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnguardar)
                    .add(btnMinar))
                .addContainerGap())
        );
        setBounds(350, 350, 541, 341);
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnMinarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinarActionPerformed
// TODO add your handling code here:
        boolean inicio, fin;
        int nfilas = table.getRowCount() - 1;
        Integer aux = (Integer)(table.getValueAt(0, 0));
        Short item;
        int id = 1;
        inicio = true;
        fin = false;
        for(int i = 0; i < nfilas; i++){
            id = 1;
            if(aux.compareTo((Integer)(table.getValueAt(i + 1, 0))) != 0){
                fin = true;
                aux = (Integer)(table.getValueAt(i + 1, 0));
            }
            item = ((Integer)(table.getValueAt(i, 1))).shortValue();
            if(inicio) {
                //  System.out.print("{");
                id = 0;
                inicio = false;
            }
            //System.out.print((Short)(table.getValueAt(i, 1)) + " ");
            
            if(fin) {
                //      System.out.println("}");
                if(id == 0 && fin) id = -2;
                else id = -1;
                fin = false;
                inicio = true;
            }
            dataset.buildNTree(item.shortValue(), id);
        }
        if(inicio) {
            //System.out.print("{");
            id = -2;
            inicio = false;
        } else {
            id = -1;
        }
        item = ((Integer)(table.getValueAt(nfilas, 1))).shortValue();
        dataset.buildNTree(item.shortValue(), id);
        //System.out.println((Short)(table.getValueAt(nfilas, 1)) + " }");
        System.out.println(Runtime.getRuntime().freeMemory());
        System.gc();
        System.out.println(Runtime.getRuntime().freeMemory());
        //dataset.showNTree();
        new Mine(dataset).setVisible(true);
    }//GEN-LAST:event_btnMinarActionPerformed
    
    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
// TODO add your handling code here:
        boolean inicio, fin;
        int nfilas = table.getRowCount() - 1;
        Integer aux = (Integer)(table.getValueAt(0, 0));
        Short item;
        int id = 1;
        inicio = true;
        fin = false;
        for(int i = 0; i < nfilas; i++){
            id = 1;
            if(aux.compareTo((Integer)(table.getValueAt(i + 1, 0))) != 0){
                fin = true;
                aux = (Integer)(table.getValueAt(i + 1, 0));
            }
            item = (Short)(table.getValueAt(i, 1));
            if(inicio) {
                System.out.print("{");
                id = 0;
                inicio = false;
            }
            System.out.print((Short)(table.getValueAt(i, 1)) + " ");
            
            if(fin) {
                System.out.println("}");
                if(id == 0 && fin) id = -2;
                else id = -1;
                fin = false;
                inicio = true;
            }
            dataset.buildNTree(item.shortValue(), id);
        }
        if(inicio) {
            System.out.print("{");
            id = -2;
            inicio = false;
        } else {
            id = -1;
        }
        item = (Short)(table.getValueAt(nfilas, 1));
        dataset.buildNTree(item.shortValue(), id);
        System.out.println((Short)(table.getValueAt(nfilas, 1)) + " }");
        dataset.showNTree();
        dataset.saveTree("/home/and/dataset2500.tariy");
        
    }//GEN-LAST:event_btnguardarActionPerformed
    
    private void btnejecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnejecutarActionPerformed
// TODO add your handling code here:
        table = new ScrollableTableModel(conexion, txtquery.getText());
        tbl_resulset.setModel(table);
    }//GEN-LAST:event_btnejecutarActionPerformed
    
    public void setQuery(String query){
        txtquery.setText(query);
        table = new ScrollableTableModel(conexion, txtquery.getText() + " limit 5");
        tbl_resulset.setModel(table);
    }
    
    public void setConnection(Connection conexion){
        this.conexion = conexion;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new Visor().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMinar;
    private javax.swing.JButton btnejecutar;
    private javax.swing.JButton btnguardar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbl_resulset;
    private javax.swing.JTextArea txtquery;
    // End of variables declaration//GEN-END:variables
    
}
