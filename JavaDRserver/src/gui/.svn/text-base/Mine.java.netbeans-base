/*
 * Mine.java
 *
 * Created on 12 de mayo de 2006, 05:15 AM
 */

package gui;

import algorithm.association.Apriori.Apriori;
import algorithm.association.EquipAsso.EquipAsso;
import algorithm.association.FPGrowth.Stack;
import Utils.AvlNode;
import Utils.AvlTree;
import Utils.DataSet;
import algorithm.association.FPGrowth.FPGrowth;
import Utils.FileManager;
import gui.Icons.Association.AssociationIcon;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author  and
 */
public class Mine extends javax.swing.JFrame {
    private SpinnerNumberModel snm = new SpinnerNumberModel(0.1, 0.01, 100.0, 0.1);
    DataSet dataset;
    Vector trees;
    String algorithm;
    long executionTime;
    /** Creates new form Mine */
    public Mine(DataSet dataset) {
        initComponents();
        this.dataset = dataset;
        spnSupport.setModel(snm);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        txtSupport = new javax.swing.JTextField();
        btnApriori = new javax.swing.JButton();
        btnEquipAsso = new javax.swing.JButton();
        btnFPGrowth = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtFile = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        spnSupport = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Algorithm Support ");
        jLabel1.setText("Support:");

        btnApriori.setText("Apriori");
        btnApriori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAprioriActionPerformed(evt);
            }
        });

        btnEquipAsso.setText("EquipAsso");
        btnEquipAsso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEquipAssoActionPerformed(evt);
            }
        });

        btnFPGrowth.setText("FPGrowth");
        btnFPGrowth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFPGrowthActionPerformed(evt);
            }
        });

        jLabel2.setText("File:");

        jButton1.setText("Save...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                            .add(jLabel2)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(txtFile))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                            .add(btnApriori)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(btnEquipAsso)))
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(txtSupport, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jButton1)
                    .add(btnFPGrowth, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(spnSupport))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(txtSupport, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(spnSupport, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnApriori)
                    .add(btnEquipAsso)
                    .add(btnFPGrowth))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(txtFile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton1))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
        generateReports(txtFile.getText());
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void btnAprioriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAprioriActionPerformed
// TODO add your handling code here:
        //short support = (short)(dataset.getNtransactions() *
        //        new Short(txtSupport.getText()) / 100);
        
        Double s = (Double)spnSupport.getValue(); 
        short support = (short)( dataset.getNtransactions() * s / 100); 
        long time = System.currentTimeMillis();
        
        Apriori a = new Apriori(dataset, support, new AssociationIcon(new JLabel(),0,0));
        while(a.makeCandidates());
        executionTime = System.currentTimeMillis() - time;
        trees = a.getFrequents();
        a.showFrequents();
        algorithm = "Apriori";
        System.out.println(algorithm + " en " + executionTime + "ms");
        txtFile.setText("A" + dataset.getNtransactions() + "S" + support);
    }//GEN-LAST:event_btnAprioriActionPerformed
    
    private void btnEquipAssoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEquipAssoActionPerformed
// TODO add your handling code here:
//        short support = (short)(dataset.getNtransactions() *
//                new Short(txtSupport.getText()) / 100);
        Double s = (Double)spnSupport.getValue(); 
        short support = (short)( dataset.getNtransactions() * s / 100); 
        long time = System.currentTimeMillis();
        
        EquipAsso equi = new EquipAsso(dataset, support,new AssociationIcon(new JLabel(),0,0));
        int type = 2;
        while(equi.findInDataset(type++)){
            //equi.
        }
        executionTime = System.currentTimeMillis() - time;
        System.out.println( executionTime + "ms");
        trees = equi.getFrequents();
        equi.showFrequents();
        algorithm = "EquipAsso";
        System.out.println(algorithm + " en " + executionTime + "ms");
        txtFile.setText("E" + dataset.getNtransactions() + "S" + support);
        
        
    }//GEN-LAST:event_btnEquipAssoActionPerformed
    
    private void btnFPGrowthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFPGrowthActionPerformed
// TODO add your handling code here:
//        short support = (short)(dataset.getNtransactions() *
//                new Short(txtSupport.getText()) / 100);
        Double s = (Double)spnSupport.getValue(); 
        short support = (short)( dataset.getNtransactions() * s / 100); 
        long time = System.currentTimeMillis();
        
        //dataset.showNTree();
        FPGrowth arbol = new FPGrowth(dataset, support,new AssociationIcon(new JLabel(),0,0));
        arbol.buildTree();
        //arbol.goToRoot();
        //arbol.showTree(new Stack());
        arbol.buildFrequents();
        executionTime = System.currentTimeMillis() - time;
        System.out.println( executionTime + "ms");
        trees = arbol.getFrequents();
        arbol.showFrequents();
        algorithm = "FPGrowth";
        System.out.println(algorithm + " en " + executionTime + "ms");
        txtFile.setText("F" + dataset.getNtransactions() + "S" + support);
        
    }//GEN-LAST:event_btnFPGrowthActionPerformed
    
    public void generateReports(String name){
        String url = "/home/and/Reportes/" + name + ".tariy";
        FileManager fm = new FileManager(url);
        
        AvlTree arbolillo;
        fm.writeString("Algorithm:      " + algorithm + "\n");
        fm.writeString("Execution Time: " + executionTime + " ms\n\n");
        for(int j = 0; j < trees.size(); j++){
            arbolillo = (AvlTree)trees.elementAt(j);
            fm.writeString("Type " + arbolillo.getTipo() + "\n");
            generateReports(fm, arbolillo.getRoot());
        }
        fm.closeFile();
    }
    
    private void generateReports(FileManager fm, AvlNode node){
        if(node != null){
            generateReports(fm, node.getLeft());
            fm.writeString(node.toString() + "\n");
            generateReports(fm, node.getRight());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Mine().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApriori;
    private javax.swing.JButton btnEquipAsso;
    private javax.swing.JButton btnFPGrowth;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSpinner spnSupport;
    private javax.swing.JTextField txtFile;
    private javax.swing.JTextField txtSupport;
    // End of variables declaration//GEN-END:variables
    
}
