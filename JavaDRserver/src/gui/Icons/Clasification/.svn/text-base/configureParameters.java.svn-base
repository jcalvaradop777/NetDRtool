/*
 * configureParameters.java
 *
 * Created on 4 de enero de 2007, 13:58
 */

package gui.Icons.Clasification;

import algorithm.classification.c45_1.Attribute;
import algorithm.classification.c45_1.TariyTableModel;
import algorithm.classification.c45_1.TreeCounter;
import gui.KnowledgeFlow.Chooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author  and
 */
public class configureParameters extends javax.swing.JFrame {
    private ClasificationIcon ci;
    public double minRows = 1.0;
    public double threshold = 1.0;
    public double training = 1.0;
    private TreeCounter c;
    private SpinnerNumberModel snmRows;
    private SpinnerNumberModel snmThreshold;
    private SpinnerNumberModel snmTraining;
    TariyTableModel dataOut1 = new TariyTableModel();
    TariyTableModel dataOut2 = new TariyTableModel();
    
    /** Creates new form configureParameters */
    public configureParameters(ClasificationIcon ci) {
        initComponents();
        this.ci = ci;
        snmRows = new SpinnerNumberModel(ci.minRows, 0.0, 100.0, 0.25);
        snmThreshold= new SpinnerNumberModel(ci.threshold, 0.0, 100.0, 0.25);
        snmTraining = new SpinnerNumberModel(ci.trainingSet, 0.0, 100.0, 0.25);
        spnMinRows.setModel(snmRows);
        spnThreshold.setModel(snmThreshold);
        spnSizeSet.setModel(snmTraining);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        spnMinRows = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        spnThreshold = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        spnSizeSet = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configure Parameters");
        setResizable(false);
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Pruning")));
        jLabel1.setText("Min Rows by Node:");

        spnMinRows.setToolTipText("Minimum number of rows by node");

        jLabel2.setText("Threshold:");

        jLabel6.setText("%");

        spnThreshold.setToolTipText("Percentage of an attribute in the class");

        jLabel7.setText("%");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, spnMinRows, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                    .add(spnThreshold, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel6)
                    .add(jLabel7))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(new java.awt.Component[] {spnMinRows, spnThreshold}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(spnMinRows, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6))
                .add(16, 16, 16)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(spnThreshold, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7))
                .addContainerGap())
        );

        jButton1.setText("Accept");
        jButton1.setToolTipText("Accept this parameters");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Training Set"));
        jLabel5.setText("Set Size :");

        spnSizeSet.setToolTipText("Size of Training set");

        jLabel4.setText("%");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 83, Short.MAX_VALUE)
                .add(spnSizeSet, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel4)
                .add(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(spnSizeSet, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton1)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton1)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        float fsizeset = 0;
        int rows, cols, roundf = 0, cn = 0;
        float vlsp=0;
        
        minRows = (Double)spnMinRows.getValue();
        ci.minRows = minRows;
        threshold = (Double)spnThreshold.getValue();
        ci.threshold = threshold;
               
        rows = ci.dataIn.getRowCount();
        cols = ci.dataIn.getColumnCount();
        
        vlsp = Float.parseFloat(spnSizeSet.getValue().toString());
           
        Object[][] data1; 
        
        Object[][] data2; 
  
        String[] columnsName = new String[cols];
        
        if(vlsp == 100 || vlsp == 0){
            
           data1 = new Object[rows][cols]; 
        
           data2 = new Object[rows][cols]; 
            
           for(int i = 0; i < cols; i++){
                for(int j = 0; j < rows; j++){
                    
                    if(ci.dataIn.getValueAt(j ,i) == null){
                         JOptionPane.showMessageDialog(this, "The input data contain missing values. \n" +
                         "You would have to apply the filter \nRemove Missing or Remplace Missing",
                         "Error in Configure Parameters",JOptionPane.ERROR_MESSAGE);
                         return;
                    }
                    
                    data1[j][i] = ci.dataIn.getValueAt(j ,i);
                    data2[j][i] = ci.dataIn.getValueAt(j ,i);
                }
                columnsName[i] = ci.dataIn.getColumnName(i);
            }
        }
        else{ 
                             
           fsizeset = vlsp/100; 
           fsizeset = fsizeset*rows;   
           roundf = (int)fsizeset; 
           
           data1 = new Object[roundf][cols]; 
        
           data2 = new Object[rows-roundf][cols]; 
            
            for(int i = 0; i < cols; i++){
                for(int j = 0; j < roundf; j++){
                    
                    if(ci.dataIn.getValueAt(j ,i) == null){
                         JOptionPane.showMessageDialog(this, "The input data contain missing values. \n" +
                         "You would have to apply the filter \nRemove Missing or Remplace Missing",
                         "Error in Configure Parameters",JOptionPane.ERROR_MESSAGE);
                         return;
                    }
                    
                    data1[j][i] = ci.dataIn.getValueAt(j ,i);
                }
                cn = 0; 
                for(int j = roundf; j < rows; j++){
                    
                    if(ci.dataIn.getValueAt(j ,i) == null){
                         JOptionPane.showMessageDialog(this, "The input data contain missing values. \n" +
                         "You would have to apply the filter \nRemove Missing or Remplace Missing",
                         "Error in Configure Parameters",JOptionPane.ERROR_MESSAGE);
                         return;
                    }
                    
                    data2[cn][i] = ci.dataIn.getValueAt(j ,i);
                    cn ++;
                }
                columnsName[i] = ci.dataIn.getColumnName(i);
            }
        }

        dataOut1.setDatos(data1);
        dataOut2.setDatos(data2);
        dataOut1.setNomcol(columnsName);    
        dataOut2.setNomcol(columnsName);
        
        ci.dataOut1 = dataOut1;
        ci.dataOut2 = dataOut2;
        
//        System.out.println(spnMinRows.getValue().toString());
//        TariyTableModel tariyData = new TariyTableModel();
//        minRows = (int)(d*tariyData.getRowCount()/100);
//        c = new TreeCounter(minRows, tariyData);
//        c.start();
        ci.mnuRun.setEnabled(true);
        Chooser.setStatus("Parameters loaded in " + ci.getName().trim());
        ci.setInfo("min Rows: " + minRows + "%" +
                 "\nThreshold: " + threshold + "%" +
                 "\n\nTraining Set: " + vlsp + "%");
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                configureParameters cp = new configureParameters(new ClasificationIcon(new JLabel(), 0 , 0));
                cp.setVisible(true);
                
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSpinner spnMinRows;
    private javax.swing.JSpinner spnSizeSet;
    private javax.swing.JSpinner spnThreshold;
    // End of variables declaration//GEN-END:variables
    
}
