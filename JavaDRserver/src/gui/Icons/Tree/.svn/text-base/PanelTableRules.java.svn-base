/*
 * PanelTableRules.java
 *
 * Created on 25 de enero de 2007, 18:04
 */

package gui.Icons.Tree;

import Utils.ExampleFileFilter;
import Utils.FileManager;
import Utils.GraphDistribution.Grafico;
import Utils.TableOptimalWidth;
import algorithm.classification.Value;
import algorithm.classification.c45_1.Attribute;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.LinkedList;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author  and
 */
public class PanelTableRules extends javax.swing.JPanel {
    LinkedList rules;
    TreeTableModel tblModel;
    String error;
    boolean orderConfidence = true;
    boolean orderFrecuence = true;
    boolean orderClass = true;
    boolean orderLength = true;
    private Attribute leaf;
    private ArrayList colors;
    
    /** Creates new form PanelTableRules */
    public PanelTableRules(Attribute root, String error) {
        this.error = error;
        this.colors = new ArrayList(root.getValuesClass().size());
        Iterator it = root.getValuesClass().iterator();
        while(it.hasNext()){
            this.colors.add( ((Value)it.next()).getName() );
        }        rules = root.getLeafs();
        tblModel = new TreeTableModel(rules);
        initComponents();
        tblRules.setModel(tblModel);
        TableOptimalWidth.setOptimalColumnWidth(tblRules);
        this.addJTableHeaderListener();
    }
    
    public int getRulesCount(){
        return rules.size();
    }
    
    public void addJTableHeaderListener() {
        MouseAdapter mouseListener = new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                TableColumnModel columnModel = tblRules.getColumnModel();
                int viewColumn = columnModel.getColumnIndexAtX(e.getX());
                int column = tblRules.convertColumnIndexToModel(viewColumn);
                if(e.getClickCount() == 1 && column != -1) {
                    if(column == 1) {
                        Collections.sort(rules, new compareLength(orderLength));
                        orderLength = !orderLength;
                        tblRules.updateUI();
                    } else if(column == 2) {
                        Collections.sort(rules, new compareClass(orderClass));
                        orderClass = !orderClass;
                        tblRules.updateUI();
                    } else if(column == 3) {
                        Collections.sort(rules, new compareConfidence(orderConfidence));
                        Collections.sort(rules, new compareFrecuence(orderFrecuence));
                        orderConfidence = !orderConfidence;
                        orderFrecuence = !orderFrecuence;
                        tblRules.updateUI();
                    }
                }
            }
        };
        JTableHeader header = tblRules.getTableHeader();
        header.addMouseListener(mouseListener);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        Save = new javax.swing.JFileChooser();
        pupGraph = new javax.swing.JPopupMenu();
        mnuGraph = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRules = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        pupGraph.setInvoker(tblRules);
        mnuGraph.setText("View Distribution");
        mnuGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuGraphActionPerformed(evt);
            }
        });

        pupGraph.add(mnuGraph);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Rules set"));
        jScrollPane1.setComponentPopupMenu(pupGraph);
        tblRules.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblRules.setToolTipText("Classification rules set");
        tblRules.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRulesMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(tblRules);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save_all.png")));
        jButton1.setText("Save Report");
        jButton1.setToolTipText("Save this report");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(259, Short.MAX_VALUE)
                .add(jButton1)
                .addContainerGap())
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void tblRulesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRulesMouseClicked
// TODO add your handling code here:
        TableColumnModel columnModel = tblRules.getColumnModel();
        int viewColumn = columnModel.getColumnIndexAtX(evt.getX());
        int column = tblRules.convertColumnIndexToModel(viewColumn);
        if((evt.getButton() == evt.BUTTON2 || evt.getButton() == evt.BUTTON3)
        && column == 2) {
            int x = tblRules.rowAtPoint(evt.getPoint());
            int y = tblRules.columnAtPoint(evt.getPoint());
            tblRules.setRowSelectionInterval(x, x);
            leaf = (Attribute)tblModel.getValueAt(x, y);
            pupGraph.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tblRulesMouseClicked
    
    private void mnuGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuGraphActionPerformed
// TODO add your handling code here:
        new Grafico(leaf, colors).setVisible(true);
    }//GEN-LAST:event_mnuGraphActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
        ExampleFileFilter ext = new ExampleFileFilter(".tux", "Archivo de reglas");
        String path;
        FileManager fm;
        
        Save.addChoosableFileFilter(ext);
        int saveOK = Save.showSaveDialog(this);
        if(saveOK == Save.APPROVE_OPTION) {
            path = Save.getSelectedFile().getAbsolutePath();
            path += ".tux";
            fm = new FileManager(path);
            fm.writeString("CLASSIFICATION RULES\n\nMined with an error of " + error + "%\n\n");
            int rows = tblModel.getRowCount();
            StringBuffer textRules = new StringBuffer();
            for(int i = 0; i < rows; i++){
                textRules.append(tblModel.getValueAt(i,0) + ".  If ");
                textRules.append(tblModel.getValueAt(i,1) + "\n");
                textRules.append("Then " + tblModel.getValueAt(i,2) + " [");
                textRules.append(tblModel.getValueAt(i,3) + "]\n\n");
            }
            fm.writeString(textRules.toString());
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser Save;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem mnuGraph;
    private javax.swing.JPopupMenu pupGraph;
    private javax.swing.JTable tblRules;
    // End of variables declaration//GEN-END:variables
    
}
