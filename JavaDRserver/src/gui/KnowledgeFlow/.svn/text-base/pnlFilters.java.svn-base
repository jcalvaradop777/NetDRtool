/*
 * pnlPreprocesamiento.java
 *
 * Created on 24 de abril de 2006, 06:02 PM
 */

package gui.KnowledgeFlow;

import java.awt.Component;
import java.awt.datatransfer.StringSelection;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DragGestureEvent;
import java.awt.dnd.DragGestureListener;
import java.awt.dnd.DragSource;
import java.awt.dnd.DragSourceDragEvent;
import java.awt.dnd.DragSourceDropEvent;
import java.awt.dnd.DragSourceEvent;
import java.awt.dnd.DragSourceListener;
import java.awt.event.MouseEvent;
import javax.swing.JLabel;

/**
 *
 * @author  and
 */
public class pnlFilters extends javax.swing.JPanel implements DragSourceListener, DragGestureListener {
    private DragSource dragSource;
    private Contenedor container;
    
    /** Creates new form pnlPreprocesamiento */
    public pnlFilters(Contenedor container) {
        this.container = container;
        initComponents();
        //this.setName("otro");
        // Step 1: Create a DragSource instance
        dragSource = new DragSource();
        // Step 2 and 3: Ask the DragSource to watch this JList
        //(first this) and to
        // notify this class when a drag gesture is recognized (second this)
        dragSource.createDefaultDragGestureRecognizer( this,
                DnDConstants.ACTION_COPY, this);
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setToolTipText("por ver");
        setName("otro");
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/filters/selection")));
        jLabel10.setText("Selection");
        jLabel10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel10.setName("selection");
        jLabel10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/filters/updatem")));
        jLabel11.setText("Update Missing");
        jLabel11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel11.setName("updatem");
        jLabel11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/filters/removem")));
        jLabel12.setText("Remove Missing ");
        jLabel12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel12.setName("removem");
        jLabel12.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/filters/muestra")));
        jLabel13.setText(" Range ");
        jLabel13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel13.setName("muestra");
        jLabel13.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/filters/reduction")));
        jLabel14.setText("Reduction");
        jLabel14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel14.setName("reduction");
        jLabel14.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/filters/removem2")));
        jLabel15.setText("Codification");
        jLabel15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel15.setName("codification");
        jLabel15.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/filters/remvalor")));
        jLabel16.setText("Replace Value");
        jLabel16.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel16.setName("remvalor");
        jLabel16.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/filters/rangenum")));
        jLabel17.setText("Numeric Range");
        jLabel17.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel17.setName("rangenum");
        jLabel17.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/filters/discretize")));
        jLabel18.setText("Discretize");
        jLabel18.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel18.setName("discretize");
        jLabel18.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel12, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                    .add(jLabel11, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                    .add(jLabel10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                    .add(jLabel13, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                    .add(jLabel14, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                    .add(jLabel17, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                    .add(jLabel18, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                    .add(jLabel16, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                    .add(jLabel15, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel12)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel11)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel10)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel13)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel14)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel15)
                .add(17, 17, 17)
                .add(jLabel16)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel17)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel18)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    // Step 6: Listen to all notifications when our object is dragged
    // over a drop target
    public void dragEnter(DragSourceDragEvent dsde) {
        System.out.println( "DS: dragEnter" );
    }
    public void dragOver(DragSourceDragEvent dsde) {
        System.out.println( "DS: dragOver" );
    }
    public void dropActionChanged(DragSourceDragEvent dsde) {
        System.out.println( "DS: dropActionChanged" );
    }
    public void dragExit(DragSourceEvent dse) {
        System.out.println( "DS: dragExit" );
    }
    
    // Step 7: Handle the drop
    public void dragDropEnd(DragSourceDropEvent dsde) {
        System.out.println( "DS: dragDropEnd" );
        if( dsde.getDropSuccess() ) {
            System.out.println( "Object successfully dropped" );
        } else {
            System.out.println( "Object not successfully dropped" );
        }
    }
    
    public void dragGestureRecognized(DragGestureEvent dge) {
        Component press = findComponentAt(dge.getDragOrigin());
        
        //Object selected = getSelectedValue();
        if( press instanceof  JLabel ) {
            JLabel icon = (JLabel)press;
            // Step 4: StringSelection implements Transferable
            // Build a StringSelection object that the Drag Source
            // can use to transport a string to the Drop Target
            StringSelection text = new StringSelection(
                    icon.getText());
            JLabel pressed = new JLabel(icon.getText(), icon.getIcon(), JLabel.CENTER);
            pressed.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            pressed.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            pressed.setName(icon.getName());
            pressed.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            
            //Transferable dataIcon = new ImageSelection(icon);
            container.setDragged(pressed);
            // Step 5: As the DragSource to start the drag of our text
            dragSource.startDrag( dge, DragSource.DefaultMoveDrop,
                    text, this );
        } else {
            System.out.println( "nothing was selected");
        }
    }
    
    public String getToolTipText(MouseEvent event){
        Component press = findComponentAt(event.getPoint());
        if(press instanceof JLabel){
            JLabel iconPress = (JLabel)press;
            String name = iconPress.getText();
            String tooltip = "<strong>" + name + "</strong><br>";
            if(name.trim().equals("Remove Missing")){
                tooltip += "Remove missing records";
            } else if(name.trim().equals("Update Missing")){
                tooltip += "Update missing records";
            } else if(name.trim().equals("Selection")){
                tooltip += "Select attributes and a target";
            } else if(name.trim().equals("Range")){
                tooltip += "Select a data range";
            } else if(name.trim().equals("Reduction")){
                tooltip += "Reduce the data";
            } else if(name.trim().equals("Codification")){
                tooltip += "Codify attributes";
            } else if(name.trim().equals("Replace Value")){
                tooltip += "Change a value";
            } else if(name.trim().equals("Numeric Range")){
                tooltip += "Select a numeric range";
            } else if(name.trim().equals("Discretize")){
                tooltip += "Discretize a numeric column";
            }
            return this.setIconInfo(tooltip);
        } else {
            return null;
        }
    }
    
    private String setIconInfo(String str){
        str = str.replaceAll("\n", "<p>");
        str = "<html>".concat(str).concat("</html>");
        return str;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    // End of variables declaration//GEN-END:variables
    
}
