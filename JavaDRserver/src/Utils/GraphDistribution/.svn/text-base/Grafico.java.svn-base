/*
 * Grafico.java
 *
 * Created on 6 de marzo de 2005, 06:49 PM
 */

package Utils.GraphDistribution;
import algorithm.classification.Value;
import algorithm.classification.c45_1.Attribute;
import algorithm.classification.compareFrecuence;
import java.awt.*;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;
/**
 *
 * @author  Flia Calderï¿½n Romero
 */
public class Grafico extends javax.swing.JFrame {
    Arcos sp;
    Attribute node;
    DecimalFormat df = new DecimalFormat();
    public static ArrayList colors;
    
    /** Creates new form Grafico */
    public Grafico() {
        initComponents();
        ArrayList values = new ArrayList();
        values.add(60);
        values.add(140);
        values.add(225);
        values.add(22);
        values.add(5);
        sp = new Arcos(values, 452);
        Collections.sort(values);
        run();
    }
    
    public Grafico(Attribute node) {
        initComponents();
        df.setMaximumFractionDigits(2);
        this.node = node;
        sp = new Arcos(node.getValuesClass(), node.getFrecuence());
        sp.setBorder(javax.swing.BorderFactory.createTitledBorder(null, node.name, javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10), Color.BLACK));
        scrollGraph.setViewportView(sp);
        run();
        this.setVisible(true);
    }
    
    public Grafico(Attribute node, ArrayList colors) {
        initComponents();
        df.setMaximumFractionDigits(2);
        this.node = node;
        this.colors = colors;
        if(node.isLeaf() == null){
            sp = new Arcos(node.getValuesClass(), node.getFrecuenceFather());
        } else {
            sp = new Arcos(node.getValuesClass(), node.getFrecuence());
        }
        sp.setBorder(javax.swing.BorderFactory.createTitledBorder(null, node.name, javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10), Color.BLACK));
        scrollGraph.setViewportView(sp);
        run();
        this.setVisible(true);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        scrollGraph = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(255, 255, 255));
        setName("frm_graficos");
        setResizable(false);
        jScrollPane2.setViewportView(jList1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, scrollGraph, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(scrollGraph, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-240)/2, (screenSize.height-299)/2, 240, 299);
    }// </editor-fold>//GEN-END:initComponents
    
    public void run(){
        final ArrayList t = node.getValuesClass();
        Collections.sort(t, new compareFrecuence());
        Collections.reverse(t);
        jList1.setModel(new javax.swing.AbstractListModel() {
            public int getSize() { return t.size(); }
            public Object getElementAt(int i) {
                Value value = (Value)t.get(i);
                int total = total = node.getFrecuence(); 
                if(node.isLeaf() == null){
                    total = node.getFrecuenceFather();
                } 
                Double confidence = new Double((double)value.getFrecuence()/(double)total);
                String item = value.getName() + ": "
                        + df.format(confidence * 100) + "% ["
                        + value.getFrecuence() + "/" + total + "]";
                return item;
            }
        });
        jList1.setCellRenderer(new CompanyLogoListCellRenderer());
    }
    
    public static Color getColor(String name){
        int n = colors.indexOf(name);
        switch(n){
            case 0:
                return Color.BLUE;
            case 1:
                return Color.GREEN.darker();
            case 2:
                return Color.RED;
            case 3:
                return Color.YELLOW.darker();
            case 4:
                return Color.ORANGE;
            case 5:
                return Color.MAGENTA;
            case 6:
                return Color.PINK;
            case 7:
                return Color.LIGHT_GRAY;
            case 8:
                return Color.GRAY;
            case 9:
                return Color.DARK_GRAY;
        }
        return Color.BLACK;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Grafico().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane scrollGraph;
    // End of variables declaration//GEN-END:variables
    class CompanyLogoListCellRenderer extends DefaultListCellRenderer {
        public Component getListCellRendererComponent(
                JList list,
                Object value,
                int index,
                boolean isSelected,
                boolean cellHasFocus) {
            Component retValue = super.getListCellRendererComponent(
                    list, value, index, isSelected, cellHasFocus
                    );
            String str = value.toString();
            str = str.substring(0, str.indexOf(": "));
            setForeground(Grafico.getColor(str));
            return retValue;
        }
    }
}
